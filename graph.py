import math
import numpy as np
import matplotlib.pyplot as plt


# thread_time = np.array([34271070, 15166539, 13233997, 9519830, 9386338, 8782085, 10049116, 8904925, 7870421, 6526510, 6550298, 6315760, 6132457, 5411372, 5400485, 5564432, 5349817, 5706851, 5196285, 5533110, 5278705, 5514054, 5609136, 5329793])
# thread_time = np.array([19597965, 13446050, 10482967, 10027644, 9234528, 9900948, 8288627, 8463932, 8359356, 6479647, 6610606, 6303166, 5725791, 6042255, 5471705, 5282820, 5287299, 5643360, 5247275, 5555815, 5105989, 5703305, 5550065, 5717505])
# thread_time = np.array([1594374, 1340062, 1000352, 956798, 1198392, 1129474, 801463, 696995, 626743, 730035, 665215, 643711, 616376, 619886, 579137, 537005, 587292, 561293, 606719, 546496, 537568, 568794, 566274, 511921])
# thread_time = np.array([1594374, 1340062, 1000352, 956798, 1198392, 1129474, 801463, 696995, 626743, 730035, 665215, 643711, 616376, 619886, 579137, 537005, 587292, 561293, 606719, 546496, 537568, 568794, 566274, 511921])
# thread_time = np.array([1437407, 1200817, 1336744, 948638, 893001, 927074, 940970, 821960, 752213, 667956, 606262, 590435, 602331, 584690, 620577, 570376, 551419, 550279, 509913, 551022, 574426, 505850, 509729, 534857])
# thread_time = np.array([16931702, 11908962, 9298889, 11036401, 9883282, 9528704, 8180935, 8564715, 7534968, 7059441, 6272894, 5437194, 5816099, 5376926, 5721263, 5779635, 5500135, 5357551, 5188443, 5168829, 5062832, 5246384, 5430349, 5326579])
# thread_time = np.array([5192003, 3990401, 3652233, 3410954, 3285758, 3184131, 2838706, 2548772, 2284301, 2045202, 1880754, 1789588, 1860174, 1885292, 1896948, 1874111, 1808481, 1861253, 1803688, 1864648, 1847784, 1796462, 1847697, 1786528])
thread_time = np.array([5214524, 4203460, 3731865, 3421045, 3213965, 3189295, 2841599, 2495414, 2286296, 2115652, 1966695, 1760427, 1869304, 1807210, 1841828, 1918040, 1870327, 1865462, 1788203, 1824065, 1843243, 1836432, 1873728, 2005231])

thread_count = np.array(list(range(1,25)))


def draw_plot(speedup, efficiency, thread_count):

    plt.subplot(2, 1, 1)
    plt.plot(thread_count, speedup, '.-')
    # plt.set_xticks(np.arange(1, 24, 1))
    # plt.set_yticks(np.arange(0, 4, 0.1))
    plt.title('Assignment 1')
    plt.ylabel('Speed up')

    plt.subplot(2, 1, 2)
    plt.plot(thread_count, efficiency, '.-')
    # plt.set_yticks(np.arange(0, 2, 0.01))
    # plt.set_xticks(np.arange(1, 24, 1))
    plt.xlabel('No of Threads')
    plt.ylabel('Efficiency')

    plt.show()

    return 0


def main():
    # micro to sec
    thread_time_sec = thread_time/1000000
    speedup = thread_time_sec[0]/thread_time_sec
    efficiency = speedup/thread_count
    draw_plot(speedup, efficiency, thread_count)

    return 0


if __name__ == '__main__':
    main()
